/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/api/mockApi.js":
/*!****************************!*\
  !*** ./src/api/mockApi.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   mockAPI: () => (/* binding */ mockAPI)\n/* harmony export */ });\n/**\r\n * Mock API for TechNet Chatbot Widget\r\n * Simulates API calls for demonstration purposes\r\n */\r\n\r\n/**\r\n * Mock API function that simulates network requests\r\n * @param {string} message - The user's message\r\n * @returns {Promise<Object>} A promise that resolves with a mock response\r\n */\r\nasync function mockAPI(message) {\r\n  // Simulate network delay\r\n  await new Promise((resolve) =>\r\n    setTimeout(resolve, 1000 + Math.random() * 2000)\r\n  );\r\n\r\n  // Simulate occasional errors\r\n  if (Math.random() < 0.1) {\r\n    throw new Error(\"Network error\");\r\n  }\r\n\r\n  // Mock responses with sources\r\n  const responses = [\r\n    {\r\n      text: \"Based on current WHO guidelines, routine immunization schedules should be maintained even during health emergencies. It's crucial to ensure continued protection against vaccine-preventable diseases.\",\r\n      sources: [\r\n        \"https://www.who.int/immunization/policy/position_papers/en/\",\r\n        \"https://www.cdc.gov/vaccines/schedules/index.html\",\r\n      ],\r\n    },\r\n    {\r\n      text: \"The global immunization coverage has shown improvement over recent years, with over 85% of children worldwide receiving basic vaccines. However, equity gaps remain in underserved populations.\",\r\n      sources: [\r\n        \"https://www.who.int/news-room/fact-sheets/detail/immunization-coverage\",\r\n        \"https://data.unicef.org/topic/child-health/immunization/\",\r\n      ],\r\n    },\r\n    {\r\n      text: \"Cold chain management is critical for vaccine effectiveness. Vaccines should be stored between 2-8Â°C and monitored continuously to ensure potency.\",\r\n      sources: [\r\n        \"https://www.who.int/immunization/programmes_systems/supply_chain/resources/en/\",\r\n        \"https://www.cdc.gov/vaccines/hcp/admin/storage/guide.html\",\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return responses[Math.floor(Math.random() * responses.length)];\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  mockAPI,\r\n});\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/api/mockApi.js?\n}");

/***/ }),

/***/ "./src/components/ChatWidget.js":
/*!**************************************!*\
  !*** ./src/components/ChatWidget.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatWidget: () => (/* binding */ ChatWidget),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/config.js */ \"./src/config/config.js\");\n/* harmony import */ var _ChatWidgetUI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChatWidgetUI.js */ \"./src/components/ChatWidgetUI.js\");\n/* harmony import */ var _ChatWidgetEvents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChatWidgetEvents.js */ \"./src/components/ChatWidgetEvents.js\");\n/* harmony import */ var _ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChatWidgetMessages.js */ \"./src/components/ChatWidgetMessages.js\");\n/* harmony import */ var _api_mockApi_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../api/mockApi.js */ \"./src/api/mockApi.js\");\n/**\r\n * TechNet Chatbot Widget Component\r\n * Main class implementing the chatbot widget with Shadow DOM encapsulation\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ChatWidget extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n\r\n    // Create shadow root for encapsulation\r\n    this.shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    // Initialize state\r\n    this.isOpen = false;\r\n    this.messageHistory = [];\r\n    this.isTyping = false;\r\n    this.typingIndicator = null;\r\n\r\n    // Bind methods to preserve 'this' context\r\n    this.toggleChat = this.toggleChat.bind(this);\r\n    this.openChat = this.openChat.bind(this);\r\n    this.closeChat = this.closeChat.bind(this);\r\n    this.sendMessage = this.sendMessage.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Lifecycle method called when the element is added to the document\r\n   */\r\n  connectedCallback() {\r\n    (0,_ChatWidgetUI_js__WEBPACK_IMPORTED_MODULE_1__.render)(this);\r\n    (0,_ChatWidgetEvents_js__WEBPACK_IMPORTED_MODULE_2__.bindEvents)(this);\r\n\r\n    // Add initial message\r\n    (0,_ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__.addMessage)(this, _config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.messages.initial, \"bot\", [], true);\r\n  }\r\n\r\n  /**\r\n   * Handles keydown events for accessibility\r\n   * @param {KeyboardEvent} e - The keyboard event\r\n   */\r\n  handleKeyDown(e) {\r\n    if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      this.toggleChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the chat window visibility\r\n   */\r\n  toggleChat() {\r\n    if (this.isOpen) {\r\n      this.closeChat();\r\n    } else {\r\n      this.openChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the chat window\r\n   */\r\n  openChat() {\r\n    this.isOpen = true;\r\n    this.window.style.display = \"flex\";\r\n    this.trigger.classList.add(\"open\");\r\n    this.trigger.setAttribute(\"aria-expanded\", \"true\");\r\n\r\n    // Focus the input field\r\n    setTimeout(() => {\r\n      this.inputField.focus();\r\n    }, 300);\r\n  }\r\n\r\n  /**\r\n   * Closes the chat window\r\n   */\r\n  closeChat() {\r\n    this.isOpen = false;\r\n    this.window.style.display = \"none\";\r\n    this.trigger.classList.remove(\"open\");\r\n    this.trigger.setAttribute(\"aria-expanded\", \"false\");\r\n  }\r\n\r\n  /**\r\n   * Sends a message from the user\r\n   */\r\n  async sendMessage() {\r\n    const message = this.inputField.value.trim();\r\n    if (!message || this.isTyping) return;\r\n\r\n    // Add user message\r\n    (0,_ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__.addMessage)(this, message, \"user\");\r\n    this.inputField.value = \"\";\r\n    this.inputField.style.height = \"auto\";\r\n\r\n    // Show typing indicator\r\n    (0,_ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__.showTypingIndicator)(this);\r\n\r\n    try {\r\n      const response = await (0,_api_mockApi_js__WEBPACK_IMPORTED_MODULE_4__.mockAPI)(message);\r\n      (0,_ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__.hideTypingIndicator)(this);\r\n      (0,_ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__.addMessage)(this, response.text, \"bot\", response.sources);\r\n    } catch (error) {\r\n      console.error(\"Chatbot API Error:\", error);\r\n      (0,_ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__.hideTypingIndicator)(this);\r\n      (0,_ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__.addMessage)(this, _config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.messages.error, \"bot\");\r\n      (0,_ChatWidgetMessages_js__WEBPACK_IMPORTED_MODULE_3__.showNotification)(this, \"Connection error. Please try again.\");\r\n    }\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ChatWidget);\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/components/ChatWidget.js?\n}");

/***/ }),

/***/ "./src/components/ChatWidgetEvents.js":
/*!********************************************!*\
  !*** ./src/components/ChatWidgetEvents.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bindEvents: () => (/* binding */ bindEvents)\n/* harmony export */ });\n/* harmony import */ var _utils_dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/dom.js */ \"./src/utils/dom.js\");\n/* harmony import */ var _utils_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helpers.js */ \"./src/utils/helpers.js\");\n/* harmony import */ var _api_mockApi_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/mockApi.js */ \"./src/api/mockApi.js\");\n\r\n\r\n\r\n\r\n/**\r\n * Binds event listeners to widget elements\r\n * @param {ChatWidget} widget - The ChatWidget instance\r\n */\r\nfunction bindEvents(widget) {\r\n  // Trigger button\r\n  widget.trigger.addEventListener(\"click\", () => widget.toggleChat());\r\n  widget.trigger.addEventListener(\"keydown\", (e) => widget.handleKeyDown(e));\r\n\r\n  // Control buttons\r\n  widget.closeBtn.addEventListener(\"click\", () => widget.closeChat());\r\n\r\n  // Input handling\r\n  widget.inputField.addEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      widget.sendMessage();\r\n    }\r\n  });\r\n\r\n  // Auto-resize textarea\r\n  widget.inputField.addEventListener(\"input\", () => {\r\n    (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.autoResizeTextarea)(widget.inputField);\r\n  });\r\n\r\n  widget.sendBtn.addEventListener(\"click\", () => widget.sendMessage());\r\n\r\n  // Close on escape key\r\n  widget.shadow.addEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"Escape\" && widget.isOpen) {\r\n      widget.closeChat();\r\n    }\r\n  });\r\n\r\n  // Handle window resize for mobile responsiveness\r\n  window.addEventListener(\r\n    \"resize\",\r\n    (0,_utils_helpers_js__WEBPACK_IMPORTED_MODULE_1__.debounce)(() => {\r\n      if (widget.isOpen && (0,_utils_helpers_js__WEBPACK_IMPORTED_MODULE_1__.isMobile)()) {\r\n      }\r\n    }, 250)\r\n  );\r\n}\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/components/ChatWidgetEvents.js?\n}");

/***/ }),

/***/ "./src/components/ChatWidgetMessages.js":
/*!**********************************************!*\
  !*** ./src/components/ChatWidgetMessages.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMessage: () => (/* binding */ addMessage),\n/* harmony export */   createMessageElement: () => (/* binding */ createMessageElement),\n/* harmony export */   hideTypingIndicator: () => (/* binding */ hideTypingIndicator),\n/* harmony export */   showNotification: () => (/* binding */ showNotification),\n/* harmony export */   showTypingIndicator: () => (/* binding */ showTypingIndicator)\n/* harmony export */ });\n/* harmony import */ var _utils_dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/dom.js */ \"./src/utils/dom.js\");\n/* harmony import */ var _utils_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/sanitizer.js */ \"./src/utils/sanitizer.js\");\n/* harmony import */ var _utils_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/helpers.js */ \"./src/utils/helpers.js\");\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config/config.js */ \"./src/config/config.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Adds a message to the chat\r\n * @param {ChatWidget} widget - The ChatWidget instance\r\n * @param {string} text - The message text\r\n * @param {string} sender - The sender (\"user\" or \"bot\")\r\n * @param {Array} sources - Array of source URLs\r\n * @param {boolean} isInitial - Whether this is the initial message\r\n */\r\nfunction addMessage(\r\n  widget,\r\n  text,\r\n  sender,\r\n  sources = [],\r\n  isInitial = false\r\n) {\r\n  const message = {\r\n    id: (0,_utils_helpers_js__WEBPACK_IMPORTED_MODULE_2__.generateId)(),\r\n    text: (0,_utils_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTML)(text),\r\n    sender,\r\n    sources: sources || [],\r\n    timestamp: new Date(),\r\n    isInitial,\r\n  };\r\n\r\n  widget.messageHistory.push(message);\r\n\r\n  const messageElement = createMessageElement(widget, message);\r\n  widget.messagesContainer.appendChild(messageElement);\r\n\r\n  if (!isInitial) {\r\n    (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.scrollToBottom)(widget.messagesContainer);\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a message element\r\n * @param {ChatWidget} widget - The ChatWidget instance\r\n * @param {Object} message - The message object\r\n * @returns {HTMLElement} The message element\r\n */\r\nfunction createMessageElement(widget, message) {\r\n  const messageDiv = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", `technet-message ${message.sender}`);\r\n  messageDiv.setAttribute(\"data-message-id\", message.id);\r\n\r\n  const avatar = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", \"technet-message-avatar\");\r\n  avatar.textContent = message.sender === \"bot\" ? \"TN\" : \"U\";\r\n\r\n  const contentWrapper = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\");\r\n  const content = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", \"technet-message-content\");\r\n  content.textContent = message.text;\r\n\r\n  const time = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", \"technet-message-time\");\r\n  time.textContent = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.formatTime)(message.timestamp);\r\n\r\n  contentWrapper.appendChild(content);\r\n  contentWrapper.appendChild(time);\r\n\r\n  // Add sources if available\r\n  if (message.sources && message.sources.length > 0) {\r\n    const sourcesDiv = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", \"technet-message-sources\");\r\n\r\n    // Create sources list\r\n    const sourcesList = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"ul\", \"technet-sources-list\");\r\n    message.sources.forEach((source) => {\r\n      const sanitizedSource = (0,_utils_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeURL)(source);\r\n      if (sanitizedSource) {\r\n        const listItem = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"li\");\r\n        const link = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"a\");\r\n        link.href = sanitizedSource;\r\n        link.target = \"_blank\";\r\n        link.rel = \"noopener noreferrer\";\r\n        link.textContent = sanitizedSource;\r\n        listItem.appendChild(link);\r\n        sourcesList.appendChild(listItem);\r\n      }\r\n    });\r\n\r\n    if (sourcesList.children.length > 0) {\r\n      const sourcesTitle = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", \"technet-sources-title\");\r\n      sourcesTitle.textContent = \"Sources:\";\r\n      sourcesDiv.appendChild(sourcesTitle);\r\n      sourcesDiv.appendChild(sourcesList);\r\n      contentWrapper.appendChild(sourcesDiv);\r\n    }\r\n  }\r\n\r\n  messageDiv.appendChild(avatar);\r\n  messageDiv.appendChild(contentWrapper);\r\n\r\n  return messageDiv;\r\n}\r\n\r\n/**\r\n * Shows the typing indicator\r\n * @param {ChatWidget} widget - The ChatWidget instance\r\n */\r\nfunction showTypingIndicator(widget) {\r\n  if (widget.typingIndicator) return;\r\n\r\n  widget.isTyping = true;\r\n  widget.sendBtn.disabled = true;\r\n\r\n  widget.typingIndicator = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", \"technet-message bot\");\r\n  widget.typingIndicator.innerHTML = `\r\n    <div class=\"technet-message-avatar\">TN</div>\r\n    <div class=\"technet-message-content\">\r\n      <div class=\"technet-typing-indicator\">\r\n        <span>${_config_config_js__WEBPACK_IMPORTED_MODULE_3__.CONFIG.messages.thinking}</span>\r\n        <div class=\"technet-typing-dots\">\r\n          <div class=\"technet-typing-dot\"></div>\r\n          <div class=\"technet-typing-dot\"></div>\r\n          <div class=\"technet-typing-dot\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  widget.messagesContainer.appendChild(widget.typingIndicator);\r\n  (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.scrollToBottom)(widget.messagesContainer);\r\n}\r\n\r\n/**\r\n * Hides the typing indicator\r\n * @param {ChatWidget} widget - The ChatWidget instance\r\n */\r\nfunction hideTypingIndicator(widget) {\r\n  if (widget.typingIndicator) {\r\n    widget.typingIndicator.remove();\r\n    widget.typingIndicator = null;\r\n  }\r\n  widget.isTyping = false;\r\n  widget.sendBtn.disabled = false;\r\n}\r\n\r\n/**\r\n * Shows a notification message\r\n * @param {ChatWidget} widget - The ChatWidget instance\r\n * @param {string} message - The notification message\r\n */\r\nfunction showNotification(widget, message) {\r\n  const notification = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", \"technet-notification\");\r\n  notification.textContent = (0,_utils_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTML)(message);\r\n  widget.shadow.appendChild(notification);\r\n\r\n  setTimeout(() => {\r\n    if (notification.parentNode) {\r\n      notification.remove();\r\n    }\r\n  }, 3000);\r\n}\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/components/ChatWidgetMessages.js?\n}");

/***/ }),

/***/ "./src/components/ChatWidgetUI.js":
/*!****************************************!*\
  !*** ./src/components/ChatWidgetUI.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   render: () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/config.js */ \"./src/config/config.js\");\n/* harmony import */ var _utils_dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/dom.js */ \"./src/utils/dom.js\");\n/* harmony import */ var _utils_sanitizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/sanitizer.js */ \"./src/utils/sanitizer.js\");\n/* harmony import */ var _utils_helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/helpers.js */ \"./src/utils/helpers.js\");\n/* harmony import */ var _api_mockApi_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../api/mockApi.js */ \"./src/api/mockApi.js\");\n/* harmony import */ var _styles_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./styles.js */ \"./src/components/styles.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Renders the widget UI within the shadow DOM\r\n * @param {ChatWidget} widget - The ChatWidget instance\r\n */\r\nfunction render(widget) {\r\n  // Add styles to shadow DOM\r\n  const style = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"style\");\r\n  style.textContent = (0,_styles_js__WEBPACK_IMPORTED_MODULE_5__.getStyles)();\r\n  widget.shadow.appendChild(style);\r\n\r\n  // Create widget container\r\n  const container = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"div\", \"technet-chatbot\");\r\n\r\n  // Create trigger button\r\n  widget.trigger = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"button\", \"technet-chatbot-trigger\");\r\n  widget.trigger.innerHTML = `\r\n    <svg viewBox=\"0 0 24 24\">\r\n      <path d=\"M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"/>\r\n    </svg>\r\n  `;\r\n  widget.trigger.setAttribute(\"aria-label\", \"Open TechNet Chat Assistant\");\r\n  widget.trigger.setAttribute(\"role\", \"button\");\r\n  widget.trigger.setAttribute(\"tabindex\", \"0\");\r\n\r\n  // Create chat window\r\n  widget.window = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"div\", \"technet-chatbot-window\");\r\n  widget.window.setAttribute(\"role\", \"dialog\");\r\n  widget.window.setAttribute(\"aria-label\", \"TechNet Chat Assistant\");\r\n\r\n  // Create header\r\n  const header = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"div\", \"technet-chatbot-header\");\r\n  header.innerHTML = `\r\n    <div class=\"technet-chatbot-title\">\r\n      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\r\n      </svg>\r\n      TechNet Assistant\r\n    </div>\r\n    <div class=\"technet-chatbot-controls\">\r\n      \r\n      <button class=\"technet-chatbot-control-btn close-btn\" aria-label=\"Close chat\">\r\n        <svg width=\"14\" height=\"14\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  `;\r\n\r\n  // Create messages container\r\n  widget.messagesContainer = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"div\", \"technet-chatbot-messages\");\r\n  widget.messagesContainer.setAttribute(\"role\", \"log\");\r\n  widget.messagesContainer.setAttribute(\"aria-live\", \"polite\");\r\n\r\n  // Create input area\r\n  const inputArea = (0,_utils_dom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"div\", \"technet-chatbot-input\");\r\n  inputArea.innerHTML = `\r\n    <div class=\"technet-input-wrapper\">\r\n      <textarea class=\"technet-input-field\" placeholder=\"${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.messages.placeholder}\" rows=\"1\" maxlength=\"1000\" aria-label=\"Message input\"></textarea>\r\n      <button class=\"technet-send-btn\" aria-label=\"Send message\">\r\n        <svg width=\"18\" height=\"18\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  `;\r\n\r\n  // Assemble the window\r\n  widget.window.appendChild(header);\r\n  widget.window.appendChild(widget.messagesContainer);\r\n  widget.window.appendChild(inputArea);\r\n\r\n  // Add to container\r\n  container.appendChild(widget.trigger);\r\n  container.appendChild(widget.window);\r\n\r\n  // Add container to shadow DOM\r\n  widget.shadow.appendChild(container);\r\n\r\n  // Store references to elements\r\n  widget.inputField = widget.window.querySelector(\".technet-input-field\");\r\n  widget.sendBtn = widget.window.querySelector(\".technet-send-btn\");\r\n  widget.closeBtn = widget.window.querySelector(\".close-btn\");\r\n}\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/components/ChatWidgetUI.js?\n}");

/***/ }),

/***/ "./src/components/styles.js":
/*!**********************************!*\
  !*** ./src/components/styles.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getStyles: () => (/* binding */ getStyles)\n/* harmony export */ });\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/config.js */ \"./src/config/config.js\");\n/**\r\n * Styles for TechNet Chatbot Widget\r\n * Contains all CSS styles as JavaScript template literals for Shadow DOM encapsulation\r\n */\r\n\r\n\r\n\r\n/**\r\n * Generates the complete CSS styles for the widget\r\n * @returns {string} The CSS styles as a string\r\n */\r\nfunction getStyles() {\r\n  return `\r\n    :host {\r\n      all: initial; /* Reset all inherited styles */\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n    }\r\n\r\n    * {\r\n      box-sizing: border-box;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n\r\n    .technet-chatbot * {\r\n      box-sizing: border-box;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n\r\n    .technet-chatbot-trigger {\r\n      position: fixed;\r\n      bottom: 24px;\r\n      right: 24px;\r\n      width: 60px;\r\n      height: 60px;\r\n      background: linear-gradient(135deg, ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary} 0%, #3a7a7a 100%);\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n      box-shadow: 0 4px 20px ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.shadow};\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: all ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.animation.duration}ms ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.animation.easing};\r\n      z-index: 10000;\r\n      border: none;\r\n      outline: none;\r\n    }\r\n\r\n    .technet-chatbot-trigger:hover {\r\n      transform: scale(1.05);\r\n      box-shadow: 0 6px 25px ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.shadow};\r\n    }\r\n\r\n    .technet-chatbot-trigger:active {\r\n      transform: scale(0.95);\r\n    }\r\n\r\n    .technet-chatbot-trigger svg {\r\n      width: 28px;\r\n      height: 28px;\r\n      fill: white;\r\n      transition: transform ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.animation.duration}ms ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.animation.easing};\r\n    }\r\n\r\n    .technet-chatbot-trigger.open svg {\r\n      transform: rotate(180deg);\r\n    }\r\n\r\n    .technet-chatbot-window {\r\n      position: fixed;\r\n      bottom: 100px;\r\n      right: 24px;\r\n      width: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.dimensions.windowWidth}px;\r\n      height: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.dimensions.windowHeight}px;\r\n      background: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.background};\r\n      border-radius: 16px;\r\n      box-shadow: 0 10px 40px ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.shadow};\r\n      display: none;\r\n      flex-direction: column;\r\n      z-index: 9999;\r\n      overflow: hidden;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n      animation: slideUp ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.animation.duration}ms ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.animation.easing};\r\n    }\r\n\r\n    @keyframes slideUp {\r\n      from {\r\n        opacity: 0;\r\n        transform: translateY(20px);\r\n      }\r\n      to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n      }\r\n    }\r\n\r\n    .technet-chatbot-header {\r\n      background: linear-gradient(135deg, ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary} 0%, #3a7a7a 100%);\r\n      color: white;\r\n      padding: 16px 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    .technet-chatbot-title {\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .technet-chatbot-controls {\r\n      display: flex;\r\n      gap: 8px;\r\n    }\r\n\r\n    .technet-chatbot-control-btn {\r\n      background: rgba(255, 255, 255, 0.2);\r\n      border: none;\r\n      border-radius: 4px;\r\n      color: white;\r\n      cursor: pointer;\r\n      width: 28px;\r\n      height: 28px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: background ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.animation.duration}ms ease;\r\n    }\r\n\r\n    .technet-chatbot-control-btn:hover {\r\n      background: rgba(255, 255, 255, 0.3);\r\n    }\r\n\r\n    .technet-chatbot-messages {\r\n      flex: 1;\r\n      overflow-y: auto;\r\n      padding: 20px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n      scroll-behavior: smooth;\r\n    }\r\n\r\n    .technet-chatbot-messages::-webkit-scrollbar {\r\n      width: 6px;\r\n    }\r\n\r\n    .technet-chatbot-messages::-webkit-scrollbar-track {\r\n      background: #f1f1f1;\r\n    }\r\n\r\n    .technet-chatbot-messages::-webkit-scrollbar-thumb {\r\n      background: #c1c1c1;\r\n      border-radius: 3px;\r\n    }\r\n    @keyframes messageSlideIn {\r\n      from {\r\n        opacity: 0;\r\n        transform: translateY(10px);\r\n      }\r\n      to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n      }\r\n    }\r\n      \r\n    .technet-message {\r\n      display: flex;\r\n      align-items: flex-end;\r\n      gap: 8px;\r\n      animation: messageSlideIn 0.3s ease-out;\r\n      margin-bottom: 12px;\r\n    }\r\n\r\n    .technet-message.user {\r\n      flex-direction: row-reverse;\r\n    }\r\n\r\n    .technet-message-avatar {\r\n      width: 32px;\r\n      height: 32px;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      flex-shrink: 0;\r\n    }\r\n\r\n    .technet-message.bot .technet-message-avatar {\r\n      background: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary};\r\n      color: white;\r\n    }\r\n\r\n    .technet-message.user .technet-message-avatar {\r\n      background: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.secondary};\r\n      color: white;\r\n    }\r\n\r\n    /* This is the key fix - proper message content container */\r\n    .technet-message > div:not(.technet-message-avatar) {\r\n      display: flex;\r\n      flex-direction: column;\r\n      max-width: calc(100% - 48px); /* Account for avatar + gap */\r\n    }\r\n\r\n    .technet-message-content {\r\n      padding: 12px 16px;\r\n      border-radius: 18px;\r\n      font-size: 14px;\r\n      line-height: 1.4;\r\n      word-wrap: break-word;\r\n      overflow-wrap: break-word;\r\n      hyphens: auto;\r\n      max-width: 100%;\r\n      width: fit-content;\r\n      min-width: 60px;\r\n    }\r\n\r\n    .technet-message.bot .technet-message-content {\r\n      background: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.botMessage};\r\n      color: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.text};\r\n      border-bottom-left-radius: 6px;\r\n    }\r\n\r\n    .technet-message.user .technet-message-content {\r\n      background: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.userMessage};\r\n      color: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.text};\r\n      border-bottom-right-radius: 6px;\r\n      align-self: flex-end; /* This keeps user messages on the right */\r\n    }\r\n\r\n    .technet-message-time {\r\n      font-size: 11px;\r\n      color: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.textLight};\r\n      margin-top: 4px;\r\n    }\r\n\r\n    .technet-message.user .technet-message-time {\r\n      align-self: flex-end;\r\n    }\r\n\r\n    .technet-message.bot .technet-message-time {\r\n      align-self: flex-start;\r\n    }\r\n\r\n    .technet-message-sources {\r\n      margin-top: 8px;\r\n      padding: 8px 12px;\r\n      background: rgba(44, 95, 95, 0.05);\r\n      border-radius: 8px;\r\n      border-left: 3px solid ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary};\r\n    }\r\n\r\n    .technet-sources-title {\r\n      font-size: 12px;\r\n      font-weight: 600;\r\n      color: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary};\r\n      margin-bottom: 4px;\r\n    }\r\n\r\n    .technet-sources-list {\r\n      list-style: none;\r\n      font-size: 11px;\r\n    }\r\n\r\n    .technet-sources-list li {\r\n      margin-bottom: 2px;\r\n    }\r\n\r\n    .technet-sources-list a {\r\n      color: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary};\r\n      text-decoration: none;\r\n      word-break: break-all;\r\n    }\r\n\r\n    .technet-sources-list a:hover {\r\n      text-decoration: underline;\r\n    }\r\n\r\n    .technet-typing-indicator {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n      color: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.textLight};\r\n      font-size: 12px;\r\n    }\r\n\r\n    .technet-typing-dots {\r\n      display: flex;\r\n      gap: 2px;\r\n    }\r\n\r\n    .technet-typing-dot {\r\n      width: 4px;\r\n      height: 4px;\r\n      background: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.textLight};\r\n      border-radius: 50%;\r\n      animation: typingDot 1.4s infinite ease-in-out;\r\n    }\r\n\r\n    .technet-typing-dot:nth-child(2) {\r\n      animation-delay: 0.2s;\r\n    }\r\n\r\n    .technet-typing-dot:nth-child(3) {\r\n      animation-delay: 0.4s;\r\n    }\r\n\r\n    @keyframes typingDot {\r\n      0%, 60%, 100% {\r\n        transform: translateY(0);\r\n        opacity: 0.5;\r\n      }\r\n      30% {\r\n        transform: translateY(-8px);\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    .technet-chatbot-input {\r\n      padding: 16px 20px;\r\n      border-top: 1px solid #e0e0e0;\r\n      display: flex;\r\n      gap: 12px;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .technet-input-wrapper {\r\n      flex: 1;\r\n      position: relative;\r\n      display: flex;\r\n      align-items: flex-end;\r\n      gap: 8px;\r\n    }\r\n\r\n    .technet-input-field {\r\n      width: 100%;\r\n      min-height: 20px;\r\n      max-height: 80px;\r\n      padding: 12px 16px;\r\n      border: 2px solid #e0e0e0;\r\n      border-radius: 20px;\r\n      font-size: 14px;\r\n      font-family: inherit;\r\n      resize: none;\r\n      outline: none;\r\n      transition: border-color 0.2s ease;\r\n      overflow-y: auto;\r\n      word-wrap: break-word;\r\n      overflow-wrap: break-word;\r\n      white-space: pre-wrap; /* Allow proper line breaks in input */\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    .technet-input-field:focus {\r\n      border-color: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary};\r\n    }\r\n\r\n    .technet-input-field::placeholder {\r\n      color: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.textLight};\r\n    }\r\n\r\n    .technet-send-btn {\r\n      width: 40px;\r\n      height: 40px;\r\n      background: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary};\r\n      border: none;\r\n      border-radius: 50%;\r\n      color: white;\r\n      cursor: pointer;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: all 0.2s ease;\r\n      flex-shrink: 0;\r\n    }\r\n\r\n    .technet-send-btn:hover:not(:disabled) {\r\n      background: #3a7a7a;\r\n      transform: scale(1.05);\r\n    }\r\n\r\n    .technet-send-btn:disabled {\r\n      background: #ccc;\r\n      cursor: not-allowed;\r\n      transform: none;\r\n    }\r\n\r\n    .technet-notification {\r\n      position: fixed;\r\n      bottom: 80px;\r\n      right: 100px;\r\n      background: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.primary};\r\n      color: white;\r\n      padding: 8px 12px;\r\n      border-radius: 20px;\r\n      font-size: 12px;\r\n      box-shadow: 0 2px 10px ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.shadow};\r\n      animation: notificationSlide 0.3s ease-out;\r\n      z-index: 10001;\r\n      max-width: 200px;\r\n      word-wrap: break-word;\r\n    }\r\n\r\n    @keyframes notificationSlide {\r\n      from {\r\n        opacity: 0;\r\n        transform: translateX(100%);\r\n      }\r\n      to {\r\n        opacity: 1;\r\n        transform: translateX(0);\r\n      }\r\n    }\r\n\r\n    /* Mobile Responsiveness */\r\n    @media (max-width: ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.dimensions.mobileBreakpoint}px) {\r\n      .technet-chatbot-window {\r\n        width: calc(100vw - 24px);\r\n        height: calc(100vh - 114px);\r\n        bottom: 95px;\r\n        right: 12px;\r\n        border-radius: 12px;\r\n      }\r\n      \r\n      .technet-chatbot-trigger {\r\n        bottom: 16px;\r\n        right: 16px;\r\n      }\r\n    }\r\n\r\n    /* Accessibility */\r\n    .technet-chatbot-trigger:focus,\r\n    .technet-chatbot-control-btn:focus,\r\n    .technet-send-btn:focus {\r\n      outline: 2px solid ${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG.colors.secondary};\r\n      outline-offset: 2px;\r\n    }\r\n  `;\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  getStyles,\r\n});\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/components/styles.js?\n}");

/***/ }),

/***/ "./src/config/config.js":
/*!******************************!*\
  !*** ./src/config/config.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONFIG: () => (/* binding */ CONFIG),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\r\n * Configuration for the TechNet Chatbot Widget\r\n * Contains all customizable settings for the widget appearance and behavior\r\n */\r\n\r\nconst CONFIG = {\r\n  position: \"bottom-right\",\r\n  colors: {\r\n    primary: \"#11404B\", // Matching TechNet's teal color\r\n    secondary: \"#FF5C00\", // Orange accent from the website\r\n    text: \"#333333\",\r\n    textLight: \"#666666\",\r\n    background: \"#ffffff\",\r\n    userMessage: \"#e8f4f8\",\r\n    botMessage: \"#f5f5f5\",\r\n    shadow: \"rgba(0,0,0,0.15)\",\r\n  },\r\n  animation: {\r\n    duration: 300,\r\n    easing: \"cubic-bezier(0.4, 0, 0.2, 1)\",\r\n  },\r\n  messages: {\r\n    initial:\r\n      \"Hello! I'm the TechNet assistant. I can help you with information about immunization programs, guidelines, and resources. How can I assist you today?\",\r\n    placeholder: \"Type your message here...\",\r\n    error:\r\n      \"Sorry, I'm having trouble connecting right now. Please try again in a moment.\",\r\n    thinking: \"Thinking...\",\r\n  },\r\n  dimensions: {\r\n    windowWidth: 380,\r\n    windowHeight: 500,\r\n    mobileBreakpoint: 768,\r\n  },\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CONFIG);\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/config/config.js?\n}");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatWidget: () => (/* reexport safe */ _components_ChatWidget_js__WEBPACK_IMPORTED_MODULE_0__.ChatWidget),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _components_ChatWidget_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/ChatWidget.js */ \"./src/components/ChatWidget.js\");\n/**\r\n * TechNet Chatbot Widget Entry Point\r\n * Main entry file that initializes the chatbot widget\r\n */\r\n\r\n\r\n\r\n// Define the custom element\r\ncustomElements.define(\"technet-chatbot\", _components_ChatWidget_js__WEBPACK_IMPORTED_MODULE_0__.ChatWidget);\r\n\r\n// Initialize when DOM is ready\r\nfunction init() {\r\n  if (document.readyState === \"loading\") {\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n      // Create and attach the widget to the document\r\n      const widget = document.createElement(\"technet-chatbot\");\r\n      document.body.appendChild(widget);\r\n    });\r\n  } else {\r\n    // Create and attach the widget to the document\r\n    const widget = document.createElement(\"technet-chatbot\");\r\n    document.body.appendChild(widget);\r\n  }\r\n}\r\n\r\n// Prevent multiple initialization\r\nif (!window.technetChatbotInitialized) {\r\n  window.technetChatbotInitialized = true;\r\n  init();\r\n}\r\n\r\n// Export for potential external use\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_components_ChatWidget_js__WEBPACK_IMPORTED_MODULE_0__.ChatWidget);\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/index.js?\n}");

/***/ }),

/***/ "./src/utils/dom.js":
/*!**************************!*\
  !*** ./src/utils/dom.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoResizeTextarea: () => (/* binding */ autoResizeTextarea),\n/* harmony export */   createElement: () => (/* binding */ createElement),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   formatTime: () => (/* binding */ formatTime),\n/* harmony export */   scrollToBottom: () => (/* binding */ scrollToBottom)\n/* harmony export */ });\n/**\r\n * DOM Utility Functions for TechNet Chatbot Widget\r\n * Provides helper functions for DOM manipulation and element creation\r\n */\r\n\r\n/**\r\n * Creates an HTML element with optional class name and inner HTML\r\n * @param {string} tag - The HTML tag name\r\n * @param {string} [className] - Optional CSS class name\r\n * @param {string} [innerHTML] - Optional inner HTML content\r\n * @returns {HTMLElement} The created element\r\n */\r\nfunction createElement(tag, className = \"\", innerHTML = \"\") {\r\n  const element = document.createElement(tag);\r\n  if (className) element.className = className;\r\n  if (innerHTML) element.innerHTML = innerHTML;\r\n  return element;\r\n}\r\n\r\n/**\r\n * Formats a date object into a time string (HH:MM)\r\n * @param {Date} date - The date object to format\r\n * @returns {string} Formatted time string\r\n */\r\nfunction formatTime(date) {\r\n  return date.toLocaleTimeString(\"en-US\", {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: false,\r\n  });\r\n}\r\n\r\n/**\r\n * Scrolls the messages container to the bottom\r\n * @param {HTMLElement} container - The messages container element\r\n */\r\nfunction scrollToBottom(container) {\r\n  setTimeout(() => {\r\n    container.scrollTop = container.scrollHeight;\r\n  }, 100);\r\n}\r\n\r\n/**\r\n * Auto-resizes a textarea element based on its content\r\n * @param {HTMLTextAreaElement} textarea - The textarea to resize\r\n * @param {number} maxHeight - Maximum height for the textarea\r\n */\r\nfunction autoResizeTextarea(textarea, maxHeight = 80) {\r\n  textarea.style.height = \"auto\";\r\n  textarea.style.height = Math.min(textarea.scrollHeight, maxHeight) + \"px\";\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  createElement,\r\n  formatTime,\r\n  scrollToBottom,\r\n  autoResizeTextarea,\r\n});\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/utils/dom.js?\n}");

/***/ }),

/***/ "./src/utils/helpers.js":
/*!******************************!*\
  !*** ./src/utils/helpers.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   generateId: () => (/* binding */ generateId),\n/* harmony export */   isMobile: () => (/* binding */ isMobile)\n/* harmony export */ });\n/**\r\n * General Helper Functions for TechNet Chatbot Widget\r\n * Provides utility functions for debouncing and other general purposes\r\n */\r\n\r\n/**\r\n * Creates a debounced version of a function\r\n * @param {Function} func - The function to debounce\r\n * @param {number} wait - The number of milliseconds to delay\r\n * @returns {Function} The debounced function\r\n */\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\n/**\r\n * Generates a unique ID\r\n * @returns {string} A unique ID string\r\n */\r\nfunction generateId() {\r\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n}\r\n\r\n/**\r\n * Checks if the current device is mobile\r\n * @returns {boolean} True if the device is mobile, false otherwise\r\n */\r\nfunction isMobile() {\r\n  return window.innerWidth <= 768;\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  debounce,\r\n  generateId,\r\n  isMobile,\r\n});\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/utils/helpers.js?\n}");

/***/ }),

/***/ "./src/utils/sanitizer.js":
/*!********************************!*\
  !*** ./src/utils/sanitizer.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   sanitizeHTML: () => (/* binding */ sanitizeHTML),\n/* harmony export */   sanitizeURL: () => (/* binding */ sanitizeURL)\n/* harmony export */ });\n/**\r\n * HTML Sanitization Utility for TechNet Chatbot Widget\r\n * Provides functions to sanitize user input and prevent XSS attacks\r\n */\r\n\r\n/**\r\n * Sanitizes HTML by escaping special characters\r\n * @param {string} str - The string to sanitize\r\n * @returns {string} The sanitized string\r\n */\r\nfunction sanitizeHTML(str) {\r\n  const temp = document.createElement(\"div\");\r\n  temp.textContent = str;\r\n  return temp.innerHTML;\r\n}\r\n\r\n/**\r\n * Sanitizes a URL by validating its protocol\r\n * @param {string} url - The URL to sanitize\r\n * @returns {string} The sanitized URL or an empty string if invalid\r\n */\r\nfunction sanitizeURL(url) {\r\n  try {\r\n    const parsedUrl = new URL(url);\r\n    // Only allow http and https protocols\r\n    if (parsedUrl.protocol === \"http:\" || parsedUrl.protocol === \"https:\") {\r\n      return url;\r\n    }\r\n    return \"\";\r\n  } catch (e) {\r\n    // If URL parsing fails, return empty string\r\n    return \"\";\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  sanitizeHTML,\r\n  sanitizeURL,\r\n});\r\n\n\n//# sourceURL=webpack://technet-chatbot/./src/utils/sanitizer.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;